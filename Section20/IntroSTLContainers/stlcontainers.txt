Containers

- Data structures that can store object of almost any type
 - template based classes

- Each container has member functions
 - some are specific to that container
 - some are available to all containers.
 
- Each container has an associated header file
 - #include <container_type>

////////////////////////////
Containers  - Common Functions
/////////////////////////////

Default constructor - initliases an empty container
----------------------------------------------------------------------------------------
Overloaded constructor - initialises containers with many options
--------------------------------------------
Copy constructor - initalises a container as a copy of another container
--------------------------------------------
Move constructor - Moves existing container to a new container
--------------------------------------------
Destructor - Destroys a container
--------------------------------------------
Copy assignment (operator =) - copy one container to another
--------------------------------------------
Move assignment (operator = ) - move one container to another
--------------------------------------------
size - returns the number of elements in the container
--------------------------------------------
empty - returns boolean to query if its empty
--------------------------------------------
insert -  insert an element into the container 
--------------------------------------------
operator< / operator <= - Returns bool of comparison of 2 containers
operator> / operator>=
--------------------------------------------
operator== and operator!= - Returns bool , are the contents of the containers equal or not
--------------------------------------------
swap - Swap the elements of 2 containers
--------------------------------------------
erase - remove element(s) from a container
--------------------------------------------
clear - remove all elements from a container
--------------------------------------------
begin and end - returns iterators to first element or end
--------------------------------------------
rbegin and rend - returns reverese iterators to first element or end
--------------------------------------------
cbegin and cend - returns constant iterators to first element or end
--------------------------------------------
crbegin and crend - returns reverse constatn iterators to first element or end
--------------------------------------------
iterators not always implemented for each container.


What types of elements can containers store?
--------------------------------------------

- a copy of the element will be stored
 - all primitives ok

- Element should be
 - Copyable and assignable (copy constructor / copy assignment)
 - moveable for efficiency (move constructor / move assignment)
 
- Ordered associative containers must be able to compare elements
 - operator< , operator==
